" Colours
"===============================================================================

syntax on
" set background=dark
" colorscheme solarized

" Force a colour mode
" if !has('gui_running')
" set t_Co=256
" endif

" let g:solarized_termcolors=256

" Elements
"===============================================================================

set showmode 

set cursorline

" Line numbers
set nu 

" Matching bracked/parenthesis
set showmatch

" Show the list instead of just auto-completing commands
set wildmenu

" Expand the status bar to always show it.
set laststatus=2

" Navigation 
"===============================================================================

let mapleader = ','

nnoremap ; :

" Treat long lines as break lines (useful when moving around in them)
map j gj
map k gk

" Smart way to move between windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l


" Search and replace the word under the cursor
nnoremap <Leader>s :%s/\<<C-r><C-w>\>//g<Left><Left>

" QuickFix Next/Previous
map <C-j> :cn<CR>
map <C-k> :cp<CR>

" Fast saving
nmap <leader>w :w!<cr>

" Buffer navigation
nnoremap <F5> :buffers<CR>:buffer<Space>

" Behaviour
"===============================================================================

set autoindent

" Set to auto read when a file is changed from the outside
set autoread

" Indent by 2 spaces
set shiftwidth=2
set softtabstop=2
" But still keep hard tabs visible
set tabstop=8

" Expand tabs to spaces
set expandtab
